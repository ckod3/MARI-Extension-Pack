<Node>
	<ID>SuperEllipse_2D</ID>
	<Category>Procedural/Custom/Pattern/</Category>
	<Attributes>
		<Attribute Name="Scale" PrettyName="Scale" Group="" Type="double" Min="0.0" Max="1.0" >0.6</Attribute>
		<Attribute Name="Corner" PrettyName="Corner Radius" Group="" Type="int" Min="1" Max="30">8</Attribute>
		<Attribute Name="Repeat" PrettyName="Repeat" Group="" Type="double" Min="0.0" Max="200.0">20.0</Attribute>
		<Attribute Name="Rotation" PrettyName="UV Rotation" Group="Position" Type="double" Min="0.0" Max="360.0">0.0</Attribute>
		<Attribute Name="UOffset" PrettyName="U Offset" Group="Position" Type="double" Min="0.0" Max="1.0">0.0</Attribute>
		<Attribute Name="VOffset" PrettyName="V Offset" Group="Position" Type="double" Min="0.0" Max="1.0">0.0</Attribute>
		<Attribute Name="URepeat" PrettyName="U Repeat" Group="Position" Type="double" Min="1.0" Max="50.0">1.0</Attribute>
		<Attribute Name="VRepeat" PrettyName="V Repeat" Group="Position" Type="double" Min="1.0" Max="50.0">1.0</Attribute>
		<Attribute Name="shapeColor" PrettyName="Shape Color" Group="Color" Type="color" Min="(0,0,0,1)" Max="(1,1,1,1)">(1,1,1,1)</Attribute>
		<Attribute Name="backColor" PrettyName="Background Color" Group="Color" Type="color" Min="(0,0,0,1)" Max="(1,1,1,1)">(0,0,0,1)</Attribute>
		<Attribute Name="Start" PrettyName="Start" Group="Gradient" Type="float" Min="0.0" Max="1.0">0.0</Attribute>
		<Attribute Name="End" PrettyName="End" Group="Gradient" Type="float" Min="0.0" Max="1.0">1.0</Attribute>
		<Attribute Name="Falloff" PrettyName="Falloff" Group="Gradient" Type="curve"> </Attribute>
	</Attributes>
	<Contexts>
	<Context Type="GLSL">
	<Shader>
	<Inputs>
		<Input Name="Input"><Default>vec4(1.0,1.0,1.0,1.0)</Default></Input>
	</Inputs>
	<Body><![CDATA[

// Super Ellipse 2D
// Source: http://en.wikipedia.org/wiki/Superellipse
// Mari 2.5v2 Implementation by Nicholas Breslow (http://nbreslow.com)
// This program is free software: GNU General Public License v3.
// See license distributed with file for more information.

// Separate each UV tile into it's own square
vec2 uv = fract(State.UV);

// Bias UV tile
uv -= vec2(0.5);

// UV Rotation
float rotRads = radians($Rotation);
float cosAngle = cos(rotRads);
float sinAngle = sin(rotRads);
mat2 rotationMatrix = mat2( cosAngle, -sinAngle, sinAngle, cosAngle );
uv = rotationMatrix * uv;

// UV Repeat
uv *= $Repeat;

// U Repeat, V Repeat
uv *= vec2($URepeat, $VRepeat);

// U Offset, V Offset
uv += vec2($UOffset, $VOffset);

// UnBias UV tile
uv += vec2(0.5);

// SuperEllipse
vec2 shapePos = 2.0 * fract(uv) - 1.0;
float shape = clamp(pow((abs(shapePos.x/$Scale)),$Corner) + pow((abs(shapePos.y/$Scale)),$Corner),0.0,1.0);
shape = 1.0 - shape;

// TODO: Find distance formula for exact gradient
float shapeGradient = mriCurveLookup($Falloff, shape);
shapeGradient = (shapeGradient-$Start)/($End-$Start);

// Color
float Offset = 1.0/(32.0 * 1024.0);
Output.rgb = vec3(mix($backColor, $shapeColor*shapeGradient, nb_AAstep(Offset, shape)));
Output.a = 1.0;
					
	]]></Body>
	</Shader>
	</Context>
	</Contexts>
</Node>