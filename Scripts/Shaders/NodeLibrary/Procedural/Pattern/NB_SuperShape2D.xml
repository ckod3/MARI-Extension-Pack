<Node>
    <ID>SuperShape 2D</ID>
    <Category>Procedural/Custom/Pattern/</Category>
    <Attributes>
        <!--===============================================================================================================-->
        <Attribute Name="a" PrettyName="A" Group="" Type="double" Min="0.0" Max="10.0">1.0</Attribute>
        <Attribute Name="b" PrettyName="B" Group="" Type="double" Min="0.0" Max="10.0">1.0</Attribute>
        <Attribute Name="m" PrettyName="M" Group="" Type="double" Min="0.0" Max="100.0">8.0</Attribute>
        <Attribute Name="n1" PrettyName="N1" Group="" Type="double" Min="0.0" Max="100.0">6.0</Attribute>
        <Attribute Name="n2" PrettyName="N2" Group="" Type="double" Min="0.0" Max="100.0">6.0</Attribute>
        <Attribute Name="n3" PrettyName="N3" Group="" Type="double" Min="0.0" Max="100.0">6.0</Attribute>
        <Attribute Name="Scale" PrettyName="Scale" Group="" Type="double" Min="0.01" Max="1.0">0.5</Attribute>
        <Attribute Name="Repeat" PrettyName="Repeat" Group="" Type="double" Min="0.0" Max="200.0">20.0</Attribute>
        <Attribute Name="Angle" PrettyName="Shape Angle" Group="" Type="float" Min="0.0" Max="360.0">0.0</Attribute>
        <!--===============================================================================================================-->
        <Attribute Name="Rotation" PrettyName="UV Rotation" Group="Position" Type="float" Min="0.0" Max="360.0">0.0</Attribute>
        <Attribute Name="UOffset" PrettyName="U Offset" Group="Position" Type="float" Min="0" Max="1">0</Attribute>
        <Attribute Name="VOffset" PrettyName="V Offset" Group="Position" Type="float" Min="0" Max="1">0</Attribute>
        <Attribute Name="URepeat" PrettyName="U Repeat" Group="Position" Type="float" Min="0" Max="50" Logarithmic="1">1</Attribute>
        <Attribute Name="VRepeat" PrettyName="V Repeat" Group="Position" Type="float" Min="0" Max="50" Logarithmic="1">1</Attribute>
        <!--===============================================================================================================-->
        <Attribute Name="shapeColor" PrettyName="Shape Color" Group="Color" Type="color" Min="(0,0,0,1)" Max="(1,1,1,1)">(1,1,1,1)</Attribute>
        <Attribute Name="backColor" PrettyName="Background Color" Group="Color" Type="color" Min="(0,0,0,1)" Max="(1,1,1,1)">(0,0,0,1)</Attribute>
        <!--===============================================================================================================-->
        <Attribute Name="Start" PrettyName="Start" Group="Gradient" Type="float" Min="0.0" Max="1.0">0.0</Attribute>
        <Attribute Name="End" PrettyName="End" Group="Gradient" Type="float" Min="0.0" Max="1.0">1.0</Attribute>
        <Attribute Name="Falloff" PrettyName="Falloff" Group="Gradient" Type="curve">0.0,0.0,0.2,0.5,0.4,1.0,1.0,1.0</Attribute>
        <!--===============================================================================================================-->
    </Attributes>
    <Contexts>
        <Context Type="GLSL">
            <Shader>
            <Inputs>
                <Input Name="Input"><Default>vec4(1.0,1.0,1.0,1.0)</Default></Input>
            </Inputs>
                <Body><![CDATA[

                // Separate each UV tile into it's own square
                vec2 uv = fract(State.UV);

                // UV Rotation
                mat2 rotationMatrix = nb_uvRotation($Rotation);
                vec2 offsetToCenter = vec2(0.5, 0.5);
                uv -= offsetToCenter;
                uv = rotationMatrix * uv;
                uv += offsetToCenter;

                // UV Repeat
                uv = nb_uvMod(uv,$Repeat,vec2($URepeat,$VRepeat),vec2($UOffset, $VOffset));

                // SuperShape and gradient
                float grad;
                float shape = nb_superShape2D(uv,$Scale,$Angle,$a,$b,$m,$n1,$n2,$n3,grad);

                // TODO: Find distance formula for exact gradient
                // Gradient
                float shapeGradient = mriCurveLookup($Falloff, 1.0-grad);
                shapeGradient = (shapeGradient-$Start)/($End-$Start);

                // Color
                float Offset = 1.0/(32.0 * 1024.0);
                float shape_mix = (nb_AAstep(Offset, shape)*shapeGradient);
                Output.rgb = vec3(mix($backColor, $shapeColor, clamp(shape_mix,0.0,1.0)));
                Output.a = mix($backColor.a, $shapeColor.a, clamp(shape_mix,0.0,1.0));

                ]]></Body>
            </Shader>
        </Context>
    </Contexts>
</Node>